<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>My Site Blog</title>
        <link>https://reantoilpc.github.io/blog</link>
        <description>My Site Blog</description>
        <lastBuildDate>Thu, 21 Jul 2022 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <item>
            <title><![CDATA[Enums.NET 使用]]></title>
            <link>https://reantoilpc.github.io/blog/2022-07-21-nuget-package-Enums.NET</link>
            <guid>2022-07-21-nuget-package-Enums.NET</guid>
            <pubDate>Thu, 21 Jul 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[使用原因]]></description>
            <content:encoded><![CDATA[<h2>使用原因</h2><p>最近在協助團隊在舊的專案底下開發新 API 功能，該功能是從資料庫取得資料後，經過過濾和整理再回傳前端頁面。
目前遇到一個小問題，該資料的某個欄位存的是<code>A</code>、<code>D</code>、<code>U</code>在前端頁面顯示分別新增、刪除、修改，在顯示上都需要<code>HardCode</code>處理，這樣的寫法造成程式碼的<code>壞味道（Bad Smell）</code>出現。</p><pre><code class="language-C#">
if (actionStatus == &quot;A&quot;) { retrun &quot;新增&quot;; }
if (actionStatus == &quot;D&quot;) { retrun &quot;刪除&quot;; }
if (actionStatus == &quot;U&quot;) { retrun &quot;更新&quot;; }

</code></pre><h2>壞味道（Bad Smell）</h2><p>為什麼HardCode方式，會有壞味道（Bad Smell）出現呢?
因為當<code>actionStatus</code>又增加一種類型，例如<code>Q</code>查詢，勢必就要加一行程式，這樣就違反開放封閉原則</p><h2>改善方式</h2><p>即然要解決HardCode問題，就要把<code>A</code>、<code>D</code>、<code>U</code>的定義要移到另一個Class或是Enum上面，而不是散落在各程式碼裡。目前想到有二個套件，可以解決我的問題</p><ol><li><a href="https://github.com/ardalis/SmartEnum">SmartEnum</a></li><li><a href="https://github.com/TylerBrinkley/Enums.NET">Enums.NET</a></li></ol><p>後來決定使用Enums.NET，原因是</p><ul><li>因為舊的專案已經在使用Enum，如果導入<code>SmartEnum</code>新的做法造成維護上的混亂。</li><li>Enums.NET比較類似原有的Enum的使用方式，比較容易理解。</li></ul><h2>先建立<code>SymbolAttribute</code>和<code>ActionStatusEnum</code></h2><pre><code class="language-C#">
// SymbolAttribute
[AttributeUsage(AttributeTargets.Field)]
public class SymbolAttribute : Attribute
{
    public string Symbol { get; }

    public SymbolAttribute(string symbol)
    {
        Symbol = symbol;
    }
}

// ActionStatusEnum
public enum ActionStatusEnum
{
    [Symbol(&quot;A&quot;)]
    [Description(&quot;新增&quot;)]
    Add,

    [Symbol(&quot;D&quot;)]
    [Description(&quot;刪除&quot;)]
    Delete,

    [Symbol(&quot;U&quot;)]
    [Description(&quot;更新&quot;)]
    Update
}

</code></pre><h2>使用<code>Enums.NET</code>取得文字說明</h2><pre><code class="language-C#">
// Get SymbolAttribute Format
var symbolFormat = Enums.RegisterCustomEnumFormat(x =&gt; x.Attributes.Get&lt;SymbolAttribute&gt;()?.Symbol);

// Return Description
if (Enums.TryParse&lt;ActionStatusEnum&gt;(actionStatus, false, out var status, symbolFormat))
{
    return status.AsString(EnumFormat.Description);
}

</code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Postman 環境變數設定]]></title>
            <link>https://reantoilpc.github.io/blog/postman-environment-variable</link>
            <guid>postman-environment-variable</guid>
            <pubDate>Tue, 31 May 2022 00:00:00 GMT</pubDate>
            <description><![CDATA[Postman Environment Variable 簡介]]></description>
            <content:encoded><![CDATA[<h2>Postman Environment Variable 簡介</h2><p>Postman 是一套測試 API 工具，藉著 Environment Variable 的設定，可以很方便切換環境，進行 API 功能驗證，概念很像 asp.net 的 appsettings，只要設定好要置換的內容，就可以使用。</p><h2>Environment Variable 設定</h2><ul><li>在 Environment 設定不同環境</li></ul><p><img src="./pictures/2022-05-31/2022-05-31-environment-variable-01.png" alt="image"/></p><ul><li>設定 Variable Name 和 Value</li></ul><p><img src="./pictures/2022-05-31/2022-05-31-environment-variable-02.png" alt="image"/></p><ul><li>使用 Variable 取代原本 Api Url</li></ul><p><img src="./pictures/2022-05-31/2022-05-31-environment-variable-03.png" alt="image"/></p><h2>透過 Response 回寫 Environment Variable</h2><p>使用 Postman 測試 API 會要使用 AccessToken 進行權限的驗證，因此在測試前需要先登入取得 AccessToken 然後複製貼上 Auth 對應欄位，有幾支 API 就要複製幾次，非常麻煩，因此可以透過 Environment Variable 簡化重複貼上的動作。</p><ul><li>先設定 AccessToken 變數，放在 Auth 對應欄位</li></ul><p><img src="./pictures/2022-05-31/2022-05-31-environment-variable-04.png" alt="image"/></p><ul><li>在取得 AccessToken API 的 Tests 裡輸入 Javascript 語法，當成功取得 AccessToken 回寫 Environment Variable</li></ul><p><img src="./pictures/2022-05-31/2022-05-31-environment-variable-05.png" alt="image"/></p><pre><code class="language-javascript">var jsonData = JSON.parse(responseBody);
pm.environment.set(&quot;AccessToken&quot;, jsonData);
</code></pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://reantoilpc.github.io/blog/welcome</link>
            <guid>welcome</guid>
            <pubDate>Thu, 26 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus blogging features are powered by the blog plugin.]]></description>
            <content:encoded><![CDATA[<p><a href="https://docusaurus.io/docs/blog">Docusaurus blogging features</a> are powered by the <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog">blog plugin</a>.</p><p>Simply add Markdown files (or folders) to the <code>blog</code> directory.</p><p>Regular blog authors can be added to <code>authors.yml</code>.</p><p>The blog post date can be extracted from filenames, such as:</p><ul><li><code>2019-05-30-welcome.md</code></li><li><code>2019-05-30-welcome/index.md</code></li></ul><p>A blog post folder can be convenient to co-locate blog post images:</p><p><img src="./docusaurus-plushie-banner.jpeg" alt="Docusaurus Plushie"/></p><p>The blog supports tags as well!</p><p><strong>And if you don&#x27;t want a blog</strong>: just delete this directory, and use <code>blog: false</code> in your Docusaurus config.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[MDX Blog Post]]></title>
            <link>https://reantoilpc.github.io/blog/mdx-blog-post</link>
            <guid>mdx-blog-post</guid>
            <pubDate>Sun, 01 Aug 2021 00:00:00 GMT</pubDate>
            <description><![CDATA[Blog posts support Docusaurus Markdown features, such as MDX.]]></description>
            <content:encoded><![CDATA[<p>Blog posts support <a href="https://docusaurus.io/docs/markdown-features">Docusaurus Markdown features</a>, such as <a href="https://mdxjs.com/">MDX</a>.</p><p>:::tip</p><p>Use the power of React to create interactive blog posts.</p><pre><code class="language-js">&lt;button onClick={() =&gt; alert(&#x27;button clicked!&#x27;)}&gt;Click me!&lt;/button&gt;
</code></pre><button>Click me!</button><p>:::</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Long Blog Post]]></title>
            <link>https://reantoilpc.github.io/blog/long-blog-post</link>
            <guid>long-blog-post</guid>
            <pubDate>Wed, 29 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[This is the summary of a very long blog post,]]></description>
            <content:encoded><![CDATA[<p>This is the summary of a very long blog post,</p><p>Use a <code>&lt;!--</code> <code>truncate</code> <code>--&gt;</code> comment to limit blog post size in the list view.</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[First Blog Post]]></title>
            <link>https://reantoilpc.github.io/blog/first-blog-post</link>
            <guid>first-blog-post</guid>
            <pubDate>Tue, 28 May 2019 00:00:00 GMT</pubDate>
            <description><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet]]></description>
            <content:encoded><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet</p>]]></content:encoded>
        </item>
    </channel>
</rss>